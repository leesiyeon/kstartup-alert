name: 🚀 K-startup Alert Scheduler

on:
  schedule:
    # 매시간 정각에 실행 (UTC 기준)
    - cron: '0 * * * *'
  workflow_dispatch: # 수동 실행 가능

jobs:
  check-announcements:
    runs-on: ubuntu-latest
    
    steps:
    - name: 🔍 K-startup 공고 확인
      run: |
        echo "🚀 K-startup 공고 확인 시작..."
        echo "⏰ 실행 시간: $(date)"
        
        # 환경변수 확인
        if [ -z "${{ secrets.VERCEL_APP_URL }}" ]; then
          echo "❌ 오류: VERCEL_APP_URL이 설정되지 않았습니다."
          echo "📋 설정 방법:"
          echo "1. GitHub Repository → Settings → Secrets and variables → Actions"
          echo "2. 'New repository secret' 클릭"
          echo "3. Name: VERCEL_APP_URL"
          echo "4. Value: https://your-app.vercel.app (실제 Vercel 배포 URL)"
          exit 1
        fi
        
        # URL 정규화 (끝에 슬래시 제거)
        NORMALIZED_URL=$(echo "${{ secrets.VERCEL_APP_URL }}" | sed 's/\/*$//')
        API_ENDPOINT="${NORMALIZED_URL}/api/notifications/check"
        
        echo "📡 API 호출 중: $API_ENDPOINT"
        echo "🔍 디버그 정보:"
        echo "  - 원본 URL: ${{ secrets.VERCEL_APP_URL }}"
        echo "  - 정규화된 URL: $NORMALIZED_URL"
        echo "  - 최종 API 엔드포인트: $API_ENDPOINT"
        echo "  - 요청 시간: $(date -u '+%Y-%m-%d %H:%M:%S UTC')"
        
        # Vercel 배포된 API 호출 (리디렉션 자동 따라가기)
        echo "⏳ curl 요청 실행 중..."
        response=$(curl -s -L -X POST "$API_ENDPOINT" \
          -H "Content-Type: application/json" \
          -H "User-Agent: GitHub-Actions-KStartup-Alert/1.0" \
          -H "Accept: application/json" \
          -w "%{http_code}|%{redirect_url}|%{num_redirects}|%{time_total}" \
          --max-time 30 \
          --retry 3 \
          --retry-delay 5 \
          --connect-timeout 10)
        
        # 응답 파싱 (형식: body|http_code|redirect_url|num_redirects|time_total)
        IFS='|' read -r body http_code redirect_url num_redirects time_total <<< "$response"
        
        echo "📊 응답 정보:"
        echo "  - HTTP Status: $http_code"
        echo "  - 응답 시간: ${time_total}초"
        echo "  - Response Body: $body"
        
        # 리디렉션 정보 출력
        if [ "$num_redirects" -gt "0" ]; then
          echo "🔄 리디렉션 발생:"
          echo "  - 리디렉션 횟수: $num_redirects번"
          echo "  - 최종 URL: $redirect_url"
        fi
        
        if [ "$http_code" = "200" ]; then
          echo "✅ K-startup 공고 확인 성공!"
          
          # JSON 파싱해서 결과 출력
          new_count=$(echo "$body" | grep -o '"newAnnouncements":[0-9]*' | cut -d':' -f2 || echo "0")
          total_count=$(echo "$body" | grep -o '"totalAnnouncements":[0-9]*' | cut -d':' -f2 || echo "0")
          ongoing_count=$(echo "$body" | grep -o '"ongoingAnnouncements":[0-9]*' | cut -d':' -f2 || echo "0")
          
          echo "📈 총 공고: $total_count개"
          echo "🔄 진행중: $ongoing_count개" 
          echo "🆕 새 공고: $new_count개"
          
          if [ "$new_count" -gt "0" ]; then
            echo "🎉 새로운 공고 $new_count개 알림 전송됨!"
          else
            echo "💤 새로운 공고가 없습니다."
          fi
        else
          echo "❌ K-startup 공고 확인 실패 (HTTP $http_code)"
          echo "🔍 응답 내용: $body"
          
          # 일반적인 HTTP 상태 코드 설명
          case "$http_code" in
            "308") echo "💡 HTTP 308: 영구 리디렉션 - URL이 다른 주소로 이동됨" ;;
            "301") echo "💡 HTTP 301: 영구 이동 - 새로운 URL로 접속 필요" ;;
            "302") echo "💡 HTTP 302: 임시 리디렉션" ;;
            "404") echo "💡 HTTP 404: API 엔드포인트를 찾을 수 없음" ;;
            "500") echo "💡 HTTP 500: 서버 내부 오류" ;;
            "502") echo "💡 HTTP 502: 게이트웨이 오류 - Vercel 배포 상태 확인 필요" ;;
            "503") echo "💡 HTTP 503: 서비스 사용 불가 - 일시적 서버 문제" ;;
            "000") echo "💡 HTTP 000: 네트워크 연결 실패 또는 타임아웃" ;;
          esac
          
          echo ""
          echo "🛠️  문제 해결 방법:"
          echo "1. VERCEL_APP_URL이 올바른 Vercel 배포 URL인지 확인"
          echo "2. Vercel 대시보드에서 배포 상태 확인"
          echo "3. API 엔드포인트가 정상 작동하는지 브라우저에서 테스트"
          echo "4. 환경변수에 https:// 프로토콜이 포함되어 있는지 확인"
          
          exit 1
        fi
        
        echo "✨ K-startup 공고 확인 완료!"
